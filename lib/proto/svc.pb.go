// Code generated by protoc-gen-go. DO NOT EDIT.
// source: svc/v1/svc.proto

package svc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WebhookMessageInput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebhookMessageInput) Reset()         { *m = WebhookMessageInput{} }
func (m *WebhookMessageInput) String() string { return proto.CompactTextString(m) }
func (*WebhookMessageInput) ProtoMessage()    {}
func (*WebhookMessageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd2b1e5b0e60339a, []int{0}
}

func (m *WebhookMessageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookMessageInput.Unmarshal(m, b)
}
func (m *WebhookMessageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookMessageInput.Marshal(b, m, deterministic)
}
func (m *WebhookMessageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookMessageInput.Merge(m, src)
}
func (m *WebhookMessageInput) XXX_Size() int {
	return xxx_messageInfo_WebhookMessageInput.Size(m)
}
func (m *WebhookMessageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookMessageInput.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookMessageInput proto.InternalMessageInfo

type WebhookMessageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebhookMessageResponse) Reset()         { *m = WebhookMessageResponse{} }
func (m *WebhookMessageResponse) String() string { return proto.CompactTextString(m) }
func (*WebhookMessageResponse) ProtoMessage()    {}
func (*WebhookMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd2b1e5b0e60339a, []int{1}
}

func (m *WebhookMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookMessageResponse.Unmarshal(m, b)
}
func (m *WebhookMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookMessageResponse.Marshal(b, m, deterministic)
}
func (m *WebhookMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookMessageResponse.Merge(m, src)
}
func (m *WebhookMessageResponse) XXX_Size() int {
	return xxx_messageInfo_WebhookMessageResponse.Size(m)
}
func (m *WebhookMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookMessageResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WebhookMessageInput)(nil), "shio.svc.WebhookMessageInput")
	proto.RegisterType((*WebhookMessageResponse)(nil), "shio.svc.WebhookMessageResponse")
}

func init() { proto.RegisterFile("svc/v1/svc.proto", fileDescriptor_cd2b1e5b0e60339a) }

var fileDescriptor_cd2b1e5b0e60339a = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0xb1, 0x4a, 0x33, 0x41,
	0x10, 0xc0, 0x71, 0xbe, 0x0f, 0x0b, 0x59, 0x2d, 0x24, 0x12, 0xd1, 0xa0, 0x22, 0x87, 0x55, 0xf0,
	0x76, 0xd0, 0x52, 0xbb, 0x58, 0x09, 0x5a, 0x68, 0x0a, 0xc1, 0x6e, 0x33, 0x0c, 0x7b, 0x43, 0xce,
	0x9d, 0xe5, 0x66, 0xb2, 0x36, 0x56, 0xbe, 0x82, 0x8f, 0xe6, 0x2b, 0xf8, 0x20, 0x62, 0xce, 0x14,
	0xa2, 0x56, 0x0b, 0x3b, 0x3f, 0xfe, 0x0c, 0xe3, 0xb6, 0xb4, 0x20, 0x94, 0x53, 0xd0, 0x82, 0x3e,
	0x77, 0x62, 0x32, 0x58, 0xd7, 0x86, 0xc5, 0x6b, 0xc1, 0xd1, 0x7e, 0x14, 0x89, 0x2d, 0x41, 0xc8,
	0x0c, 0x21, 0x25, 0xb1, 0x60, 0x2c, 0x49, 0x7b, 0x37, 0x3a, 0x59, 0x3e, 0x58, 0x47, 0x4a, 0xb5,
	0x3e, 0x85, 0x18, 0xa9, 0x03, 0xc9, 0x4b, 0xf1, 0x53, 0x57, 0x43, 0xb7, 0x7d, 0x4f, 0xb3, 0x46,
	0x64, 0x7e, 0x43, 0xaa, 0x21, 0xd2, 0x55, 0xca, 0x0b, 0xab, 0x76, 0xdd, 0xce, 0xf7, 0xef, 0x3b,
	0xd2, 0x2c, 0x49, 0xe9, 0xec, 0xd9, 0xad, 0x5d, 0x36, 0xc1, 0x06, 0xe6, 0x36, 0xae, 0x39, 0xd1,
	0x97, 0x1a, 0x1c, 0xf8, 0xd5, 0x7a, 0xfe, 0x97, 0xde, 0xe8, 0xe8, 0xaf, 0xf1, 0xaa, 0x5b, 0x1d,
	0xbf, 0xbc, 0xbd, 0xbf, 0xfe, 0x3f, 0xac, 0xf6, 0xa0, 0xe5, 0x44, 0x20, 0x96, 0xa1, 0x23, 0x25,
	0xab, 0x33, 0xa7, 0x5a, 0x51, 0x32, 0x9d, 0xff, 0x1b, 0x4f, 0x6e, 0xdd, 0x90, 0xc5, 0x63, 0x30,
	0x0c, 0xd6, 0x27, 0xb1, 0x65, 0x4a, 0x36, 0xd9, 0x9c, 0x36, 0x2c, 0x53, 0xea, 0x0a, 0x23, 0xe9,
	0xc3, 0x38, 0xb2, 0x35, 0x8b, 0x99, 0x47, 0x79, 0x84, 0x1e, 0xb3, 0xc0, 0x27, 0xaf, 0xa3, 0x40,
	0x9e, 0x47, 0xe8, 0xaf, 0x7b, 0xa1, 0x05, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x9e, 0x21,
	0xe5, 0x6a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	LineWebhook(ctx context.Context, in *WebhookMessageInput, opts ...grpc.CallOption) (*WebhookMessageResponse, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) LineWebhook(ctx context.Context, in *WebhookMessageInput, opts ...grpc.CallOption) (*WebhookMessageResponse, error) {
	out := new(WebhookMessageResponse)
	err := c.cc.Invoke(ctx, "/shio.svc.Chat/LineWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	LineWebhook(context.Context, *WebhookMessageInput) (*WebhookMessageResponse, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) LineWebhook(ctx context.Context, req *WebhookMessageInput) (*WebhookMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineWebhook not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_LineWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebhookMessageInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).LineWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shio.svc.Chat/LineWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).LineWebhook(ctx, req.(*WebhookMessageInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shio.svc.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LineWebhook",
			Handler:    _Chat_LineWebhook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svc/v1/svc.proto",
}
